# -*- coding: utf-8 -*-
# Copyright (C) 2025 HirMtsd. All Rights Reserved.
# Code for 'AtCoder Beginner Contest 423-B'
# Date(ISO 8601): 2025-10-01

"""
標準入力から1つの整数nと、数値配列lを読み込む
2<=n<=100、 配列lの要素数はn、li∈{0,1}
nは扉の数、n+1を部屋の数とし、
数値配列lの要素liは、部屋i-1と部屋iの間の扉の状態(0:開,1:閉)
2人の人が部屋0と部屋nから移動しはじめて、扉が開いている状態のときのみ隣の部屋に
移動できるとき、2人とも到達できない部屋の数を返す。
"""

# 主処理
def func(n, l):
    # 答えのデフォルト値を準備
    ans = 0

    # 配列中に1が0個または1個の場合はすべての部屋に到達可能
    # なので、1を超える場合のみ数える
    if l.count(1) > 1:
        # 配列の前から数えて最初に1が出る位置と、
        # 配列の後から数えて最初に1が出る位置を調べる。
        s_pos = l.index(1)
        l.reverse()
        e_pos = n - l.index(1)
        
        # 終りの位置から最初の位置を引くと未到達の部屋の数が判る
        ans = e_pos - s_pos - 1
        
    # 答えを返す
    return(ans)

# このプログラムを直接呼び出した場合のみ実行する部分
# (importで別ファイルから呼び出した場合にはこの部分は実行しない)
# テスト時に「標準入力」からの入力と、「標準出力」への出力をしないための機構
if __name__ == "__main__":
    # 標準入力処理
    # 1行目の入力を1つの数値として扱う(入力は1～100に限定されている。)
    n = int(input())
    # 2行目の入力をn個の数値リストとして扱う
    l = [int(s) for s in input().split()]
    
    # 処理を呼び出し、結果を出力する
    print(func(n, l))

